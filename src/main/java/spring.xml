<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
http://www.springframework.org/schema/tx  
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
http://www.springframework.org/schema/aop  
http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
http://www.springframework.org/schema/context  
http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd" >
	<!--这里采用的是spring-context-support4.0.6+quartz2.2.2结合的方式进行定时任务的相关操作  -->
	<!-- 不同版本之间，会有较大的差异 -->
	
	
	<!-- 扫描包 -->
	<context:component-scan base-package="com.ashin.*"/>
	
	<!--读取jdbc.properties  -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 配置数据库信息 -->
	<bean id="quartzDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${quartz.driverClassName}"/>
		<property name="url" value="${quartz.url}"/>
		<property name="username" value="${quartz.username}"/>
		<property name="password" value="${quartz.password}"/>
	</bean>
	
	<!-- 时区 -->
	<bean id="timeZone" class="java.util.TimeZone" factory-method="getTimeZone">
		<constructor-arg value="GMT+08:00"/>
	</bean>
	
	<!-- 定义job1 -->                        
	<bean id="myJobDetail1" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
			<value>com.ashin.job.MyJob1</value>
		</property>
		<property name="name" value="jobName1"></property>
		<property name="group" value="jobValue1"></property>
		<property name="durability" value="true"></property><!--durability是否持久化到数据库  -->
	</bean>
	
	<!-- 定义trigger1 -->
	<bean id="myTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="name" value="triggerName1"></property>
		<property name="group" value="triggerGroup1"></property>
		<property name="jobDetail" ref="myJobDetail1"></property>
		<property name="cronExpression" value="0 0/2 21 * * ?"></property>
		<property name="timeZone" ref="timeZone"></property>
		<property name="misfireInstruction" value="1"></property>
	</bean>
	
	<!-- 定义job2 -->                        
	<bean id="myJobDetail2" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
			<value>com.ashin.job.MyJob2</value>
		</property>
		<property name="name" value="jobName2"></property>
		<property name="group" value="jobValue2"></property>
		<property name="durability" value="true"></property><!--durability是否持久化到数据库  -->
	</bean>
	
	<!-- 定义trigger2 -->
	<bean id="myTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="name" value="triggerName2"></property>
		<property name="group" value="triggerGroup2"></property>
		<property name="jobDetail" ref="myJobDetail2"></property>
		<!-- 每10秒执行一次 -->
		<property name="cronExpression" value="0/10 * * * * ?"></property>
		<property name="timeZone" ref="timeZone"></property>
		<property name="misfireInstruction" value="1"></property>
	</bean>
	
	<!-- 任务调度 -->
	<bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false" autowire="no" >
		<property name="dataSource">
			<ref bean="quartzDataSource"/>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">20</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<!-- JobStore 配置 -->
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key=" org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				<!-- 数据表设置 -->
				<prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
			</props>
		</property>
		<!-- 初始化之后延迟30秒启动scheduler -->
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="startupDelay" value="30" />
		<!-- 定时任务是否随web启动 -->
		<property name="autoStartup" value="true" />
		<!-- 注册触发器 -->
		<property name="triggers">
			<!-- 调度清单 -->
			<list>
				<ref bean="myTrigger1" />
				<ref bean="myTrigger2"/>
			</list>
		</property>
		
	</bean>
	
	
	
	<!-- 自定义的job -->
	<!-- <bean id="myJob" class="com.ashin.job.MyJob"/> -->
	
	<!-- 配置jobDetail -->
   <!--  <bean id="myJobDetail"  
	  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   -->
	  <!-- 用到的Job实例 -->  
	  <!-- <property name="targetObject">  
	   <ref bean="myJob"/>  
	  </property>  
	  Job实例中的方法  
	  <property name="targetMethod">  
	   <value>run</value>  
	  </property>  
	 </bean> -->
    
    <!-- 配置触发器Trigger -->
   <!--  <bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    	<property name="name" value="name1"></property>
    	<property name="group" value="group1"></property>
    	<property name="jobDetail">
    		<ref bean="myJobDetail"/>
    	</property>
    	<property name="cronExpression"> -->
    		<!-- 每10秒执行一次 -->  
    	<!-- 	<value>0/10 * * * * ?</value>
    	</property>
    </bean> -->
    
    <!-- 任务调度scheduler工厂 -->
   <!--  <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
    		<list>
    			<ref bean="myTrigger"/>
    		</list>
    	</property>
    </bean> -->
    
     
</beans>